const t=["","*",".*","root","root.*"];function e(t=[],e={},s=[]){if(0===t.length)return s;for(let a=0,o=t.length;a<o;a++){const o=t[a],r=n(o,e);r&&s.push({path:o,value:r})}return s}function n(e,n){return function(e){return t.indexOf(e)>-1}(e)?n:function(t,e){if(!e)return t;const n=e.split(".");let s=t;for(let t=0;t<n.length;t++){const e=n[t];if("*"!==e&&(s=s[e]),t<n.length-1&&"object"!=typeof s){s=void 0;break}}return s}(n,e)}module.exports=t=>s=>{const a=function(t,s){let a=[];const o=t.action((t,e)=>e);return{"state.keys.request":({payload:e})=>{const a=n(e.path,t.getState());s.stateKeysResponse(e.path,Object.keys(a))},"state.values.request":({payload:e})=>{const a=n(e.path,t.getState());s.stateValuesResponse(e.path,a)},"state.values.subscribe":({payload:n})=>{if(a=n.paths,n.paths){const n=e(a,t.getState());s.stateValuesChange(n)}t.subscribe((t,n)=>{const o=n&&n.name||"Reactotron/DISPATCH",r=e(a,t);(function(t,e){try{return e?Promise.resolve(e()).then(function(e){const n=e?Object.keys(e):[];let s={};for(let e=0;e<n.length;e++){const a=n[e];s[a]=t[a]}return s}):Promise.resolve(!1)}catch(t){return Promise.reject(t)}})(t,n).then(t=>{t?s.stateActionComplete(o,t):s.display({name:"UNISTORE",preview:"store.setState",value:"Warning: The values of the action cannot be determined when store.setState is used to update state within an action. Think about returning an object instead.",important:!0}),s.stateValuesChange(r)})})},"state.action.dispatch":({payload:e})=>{t.setState(e.action)},"state.backup.request":()=>{const e=t.getState();s.stateBackupResponse(e)},"state.restore.request":({payload:t})=>{o(t.state)}}}(t,s);return{onCommand:t=>{const e=a[t.type];e&&e(t)}}};
//# sourceMappingURL=index.js.map
