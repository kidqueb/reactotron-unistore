{"version":3,"file":"index.modern.mjs","sources":["../src/helpers.js","../node_modules/deep-diff/index.js","../src/index.js","../src/createCommandHandlers.js"],"sourcesContent":["import dlv from 'dlv'\nimport diff from 'deep-diff'\n\nexport function getChanges(paths, state, changes = []) {\n  for (let index = 0, total = paths.length; index < total; index++) {\n    const path = paths[index];\n    const actualPath = path.endsWith('.*') ? path.replace('.*', '') : path\n    const value = dlv(state, actualPath);\n\n    changes.push({ path, value });\n  }\n\n  return changes\n}\n\nexport function getActionParams(oldState, newState) {\n  let diffs = diff(oldState, newState)\n  console.log(diffs)\n  let params = {}\n\n  // for (let index = 0; index < diffs.length; index++) {\n  //   console.log(diffs[index])\n  // }\n\n  return params\n}\n",";(function(root, factory) { // eslint-disable-line no-extra-semi\n  var deepDiff = factory(root);\n  // eslint-disable-next-line no-undef\n  if (typeof define === 'function' && define.amd) {\n      // AMD\n      define('DeepDiff', function() { // eslint-disable-line no-undef\n          return deepDiff;\n      });\n  } else if (typeof exports === 'object' || typeof navigator === 'object' && navigator.product.match(/ReactNative/i)) {\n      // Node.js or ReactNative\n      module.exports = deepDiff;\n  } else {\n      // Browser globals\n      var _deepdiff = root.DeepDiff;\n      deepDiff.noConflict = function() {\n          if (root.DeepDiff === deepDiff) {\n              root.DeepDiff = _deepdiff;\n          }\n          return deepDiff;\n      };\n      root.DeepDiff = deepDiff;\n  }\n}(this, function(root) {\n  var validKinds = ['N', 'E', 'A', 'D'];\n\n  // nodejs compatible on server side and in the browser.\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  }\n\n  function Diff(kind, path) {\n    Object.defineProperty(this, 'kind', {\n      value: kind,\n      enumerable: true\n    });\n    if (path && path.length) {\n      Object.defineProperty(this, 'path', {\n        value: path,\n        enumerable: true\n      });\n    }\n  }\n\n  function DiffEdit(path, origin, value) {\n    DiffEdit.super_.call(this, 'E', path);\n    Object.defineProperty(this, 'lhs', {\n      value: origin,\n      enumerable: true\n    });\n    Object.defineProperty(this, 'rhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffEdit, Diff);\n\n  function DiffNew(path, value) {\n    DiffNew.super_.call(this, 'N', path);\n    Object.defineProperty(this, 'rhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffNew, Diff);\n\n  function DiffDeleted(path, value) {\n    DiffDeleted.super_.call(this, 'D', path);\n    Object.defineProperty(this, 'lhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffDeleted, Diff);\n\n  function DiffArray(path, index, item) {\n    DiffArray.super_.call(this, 'A', path);\n    Object.defineProperty(this, 'index', {\n      value: index,\n      enumerable: true\n    });\n    Object.defineProperty(this, 'item', {\n      value: item,\n      enumerable: true\n    });\n  }\n  inherits(DiffArray, Diff);\n\n  function arrayRemove(arr, from, to) {\n    var rest = arr.slice((to || from) + 1 || arr.length);\n    arr.length = from < 0 ? arr.length + from : from;\n    arr.push.apply(arr, rest);\n    return arr;\n  }\n\n  function realTypeOf(subject) {\n    var type = typeof subject;\n    if (type !== 'object') {\n      return type;\n    }\n\n    if (subject === Math) {\n      return 'math';\n    } else if (subject === null) {\n      return 'null';\n    } else if (Array.isArray(subject)) {\n      return 'array';\n    } else if (Object.prototype.toString.call(subject) === '[object Date]') {\n      return 'date';\n    } else if (typeof subject.toString === 'function' && /^\\/.*\\//.test(subject.toString())) {\n      return 'regexp';\n    }\n    return 'object';\n  }\n\n  // http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n  function hashThisString(string) {\n    var hash = 0;\n    if (string.length === 0) { return hash; }\n    for (var i = 0; i < string.length; i++) {\n      var char = string.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n    return hash;\n  }\n\n  // Gets a hash of the given object in an array order-independent fashion\n  // also object key order independent (easier since they can be alphabetized)\n  function getOrderIndependentHash(object) {\n    var accum = 0;\n    var type = realTypeOf(object);\n\n    if (type === 'array') {\n      object.forEach(function (item) {\n        // Addition is commutative so this is order indep\n        accum += getOrderIndependentHash(item);\n      });\n\n      var arrayString = '[type: array, hash: ' + accum + ']';\n      return accum + hashThisString(arrayString);\n    }\n\n    if (type === 'object') {\n      for (var key in object) {\n        if (object.hasOwnProperty(key)) {\n          var keyValueString = '[ type: object, key: ' + key + ', value hash: ' + getOrderIndependentHash(object[key]) + ']';\n          accum += hashThisString(keyValueString);\n        }\n      }\n\n      return accum;\n    }\n\n    // Non object, non array...should be good?\n    var stringToHash = '[ type: ' + type + ' ; value: ' + object + ']';\n    return accum + hashThisString(stringToHash);\n  }\n\n  function deepDiff(lhs, rhs, changes, prefilter, path, key, stack, orderIndependent) {\n    changes = changes || [];\n    path = path || [];\n    stack = stack || [];\n    var currentPath = path.slice(0);\n    if (typeof key !== 'undefined' && key !== null) {\n      if (prefilter) {\n        if (typeof (prefilter) === 'function' && prefilter(currentPath, key)) {\n          return;\n        } else if (typeof (prefilter) === 'object') {\n          if (prefilter.prefilter && prefilter.prefilter(currentPath, key)) {\n            return;\n          }\n          if (prefilter.normalize) {\n            var alt = prefilter.normalize(currentPath, key, lhs, rhs);\n            if (alt) {\n              lhs = alt[0];\n              rhs = alt[1];\n            }\n          }\n        }\n      }\n      currentPath.push(key);\n    }\n\n    // Use string comparison for regexes\n    if (realTypeOf(lhs) === 'regexp' && realTypeOf(rhs) === 'regexp') {\n      lhs = lhs.toString();\n      rhs = rhs.toString();\n    }\n\n    var ltype = typeof lhs;\n    var rtype = typeof rhs;\n    var i, j, k, other;\n\n    var ldefined = ltype !== 'undefined' ||\n      (stack && (stack.length > 0) && stack[stack.length - 1].lhs &&\n        Object.getOwnPropertyDescriptor(stack[stack.length - 1].lhs, key));\n    var rdefined = rtype !== 'undefined' ||\n      (stack && (stack.length > 0) && stack[stack.length - 1].rhs &&\n        Object.getOwnPropertyDescriptor(stack[stack.length - 1].rhs, key));\n\n    if (!ldefined && rdefined) {\n      changes.push(new DiffNew(currentPath, rhs));\n    } else if (!rdefined && ldefined) {\n      changes.push(new DiffDeleted(currentPath, lhs));\n    } else if (realTypeOf(lhs) !== realTypeOf(rhs)) {\n      changes.push(new DiffEdit(currentPath, lhs, rhs));\n    } else if (realTypeOf(lhs) === 'date' && (lhs - rhs) !== 0) {\n      changes.push(new DiffEdit(currentPath, lhs, rhs));\n    } else if (ltype === 'object' && lhs !== null && rhs !== null) {\n      for (i = stack.length - 1; i > -1; --i) {\n        if (stack[i].lhs === lhs) {\n          other = true;\n          break;\n        }\n      }\n      if (!other) {\n        stack.push({ lhs: lhs, rhs: rhs });\n        if (Array.isArray(lhs)) {\n          // If order doesn't matter, we need to sort our arrays\n          if (orderIndependent) {\n            lhs.sort(function (a, b) {\n              return getOrderIndependentHash(a) - getOrderIndependentHash(b);\n            });\n\n            rhs.sort(function (a, b) {\n              return getOrderIndependentHash(a) - getOrderIndependentHash(b);\n            });\n          }\n          i = rhs.length - 1;\n          j = lhs.length - 1;\n          while (i > j) {\n            changes.push(new DiffArray(currentPath, i, new DiffNew(undefined, rhs[i--])));\n          }\n          while (j > i) {\n            changes.push(new DiffArray(currentPath, j, new DiffDeleted(undefined, lhs[j--])));\n          }\n          for (; i >= 0; --i) {\n            deepDiff(lhs[i], rhs[i], changes, prefilter, currentPath, i, stack, orderIndependent);\n          }\n        } else {\n          var akeys = Object.keys(lhs);\n          var pkeys = Object.keys(rhs);\n          for (i = 0; i < akeys.length; ++i) {\n            k = akeys[i];\n            other = pkeys.indexOf(k);\n            if (other >= 0) {\n              deepDiff(lhs[k], rhs[k], changes, prefilter, currentPath, k, stack, orderIndependent);\n              pkeys[other] = null;\n            } else {\n              deepDiff(lhs[k], undefined, changes, prefilter, currentPath, k, stack, orderIndependent);\n            }\n          }\n          for (i = 0; i < pkeys.length; ++i) {\n            k = pkeys[i];\n            if (k) {\n              deepDiff(undefined, rhs[k], changes, prefilter, currentPath, k, stack, orderIndependent);\n            }\n          }\n        }\n        stack.length = stack.length - 1;\n      } else if (lhs !== rhs) {\n        // lhs is contains a cycle at this element and it differs from rhs\n        changes.push(new DiffEdit(currentPath, lhs, rhs));\n      }\n    } else if (lhs !== rhs) {\n      if (!(ltype === 'number' && isNaN(lhs) && isNaN(rhs))) {\n        changes.push(new DiffEdit(currentPath, lhs, rhs));\n      }\n    }\n  }\n\n  function observableDiff(lhs, rhs, observer, prefilter, orderIndependent) {\n    var changes = [];\n    deepDiff(lhs, rhs, changes, prefilter, null, null, null, orderIndependent);\n    if (observer) {\n      for (var i = 0; i < changes.length; ++i) {\n        observer(changes[i]);\n      }\n    }\n    return changes;\n  }\n\n  function orderIndependentDeepDiff(lhs, rhs, changes, prefilter, path, key, stack) {\n    return deepDiff(lhs, rhs, changes, prefilter, path, key, stack, true);\n  }\n\n  function accumulateDiff(lhs, rhs, prefilter, accum) {\n    var observer = (accum) ?\n      function (difference) {\n        if (difference) {\n          accum.push(difference);\n        }\n      } : undefined;\n    var changes = observableDiff(lhs, rhs, observer, prefilter);\n    return (accum) ? accum : (changes.length) ? changes : undefined;\n  }\n\n  function accumulateOrderIndependentDiff(lhs, rhs, prefilter, accum) {\n    var observer = (accum) ?\n      function (difference) {\n        if (difference) {\n          accum.push(difference);\n        }\n      } : undefined;\n    var changes = observableDiff(lhs, rhs, observer, prefilter, true);\n    return (accum) ? accum : (changes.length) ? changes : undefined;\n  }\n\n  function applyArrayChange(arr, index, change) {\n    if (change.path && change.path.length) {\n      var it = arr[index],\n        i, u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          applyArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          delete it[change.path[i]];\n          break;\n        case 'E':\n        case 'N':\n          it[change.path[i]] = change.rhs;\n          break;\n      }\n    } else {\n      switch (change.kind) {\n        case 'A':\n          applyArrayChange(arr[index], change.index, change.item);\n          break;\n        case 'D':\n          arr = arrayRemove(arr, index);\n          break;\n        case 'E':\n        case 'N':\n          arr[index] = change.rhs;\n          break;\n      }\n    }\n    return arr;\n  }\n\n  function applyChange(target, source, change) {\n    if (typeof change === 'undefined' && source && ~validKinds.indexOf(source.kind)) {\n      change = source;\n    }\n    if (target && change && change.kind) {\n      var it = target,\n        i = -1,\n        last = change.path ? change.path.length - 1 : 0;\n      while (++i < last) {\n        if (typeof it[change.path[i]] === 'undefined') {\n          it[change.path[i]] = (typeof change.path[i + 1] !== 'undefined' && typeof change.path[i + 1] === 'number') ? [] : {};\n        }\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          if (change.path && typeof it[change.path[i]] === 'undefined') {\n            it[change.path[i]] = [];\n          }\n          applyArrayChange(change.path ? it[change.path[i]] : it, change.index, change.item);\n          break;\n        case 'D':\n          delete it[change.path[i]];\n          break;\n        case 'E':\n        case 'N':\n          it[change.path[i]] = change.rhs;\n          break;\n      }\n    }\n  }\n\n  function revertArrayChange(arr, index, change) {\n    if (change.path && change.path.length) {\n      // the structure of the object at the index has changed...\n      var it = arr[index],\n        i, u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          revertArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'E':\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'N':\n          delete it[change.path[i]];\n          break;\n      }\n    } else {\n      // the array item is different...\n      switch (change.kind) {\n        case 'A':\n          revertArrayChange(arr[index], change.index, change.item);\n          break;\n        case 'D':\n          arr[index] = change.lhs;\n          break;\n        case 'E':\n          arr[index] = change.lhs;\n          break;\n        case 'N':\n          arr = arrayRemove(arr, index);\n          break;\n      }\n    }\n    return arr;\n  }\n\n  function revertChange(target, source, change) {\n    if (target && source && change && change.kind) {\n      var it = target,\n        i, u;\n      u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        if (typeof it[change.path[i]] === 'undefined') {\n          it[change.path[i]] = {};\n        }\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          // Array was modified...\n          // it will be an array...\n          revertArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          // Item was deleted...\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'E':\n          // Item was edited...\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'N':\n          // Item is new...\n          delete it[change.path[i]];\n          break;\n      }\n    }\n  }\n\n  function applyDiff(target, source, filter) {\n    if (target && source) {\n      var onChange = function (change) {\n        if (!filter || filter(target, source, change)) {\n          applyChange(target, source, change);\n        }\n      };\n      observableDiff(target, source, onChange);\n    }\n  }\n\n  Object.defineProperties(accumulateDiff, {\n\n    diff: {\n      value: accumulateDiff,\n      enumerable: true\n    },\n    orderIndependentDiff: {\n      value: accumulateOrderIndependentDiff,\n      enumerable: true\n    },\n    observableDiff: {\n      value: observableDiff,\n      enumerable: true\n    },\n    orderIndependentObservableDiff: {\n      value: orderIndependentDeepDiff,\n      enumerable: true\n    },\n    orderIndepHash: {\n      value: getOrderIndependentHash,\n      enumerable: true\n    },\n    applyDiff: {\n      value: applyDiff,\n      enumerable: true\n    },\n    applyChange: {\n      value: applyChange,\n      enumerable: true\n    },\n    revertChange: {\n      value: revertChange,\n      enumerable: true\n    },\n    isConflict: {\n      value: function () {\n        return typeof $conflict !== 'undefined';\n      },\n      enumerable: true\n    }\n  });\n\n  // hackish...\n  accumulateDiff.DeepDiff = accumulateDiff;\n  // ...but works with:\n  // import DeepDiff from 'deep-diff'\n  // import { DeepDiff } from 'deep-diff'\n  // const DeepDiff = require('deep-diff');\n  // const { DeepDiff } = require('deep-diff');\n\n  if (root) {\n    root.DeepDiff = accumulateDiff;\n  }\n\n  return accumulateDiff;\n}));\n","import createCommandHandlers from './createCommandHandlers'\n\nexport default store => {\n  return reactotron => {\n    const handlers = createCommandHandlers(store, reactotron)\n\n    return {\n      onCommand: res => {\n        const handler = handlers[res.type]\n        handler && handler(res)\n      }\n    };\n  };\n};\n","import { getChanges } from './helpers'\n\nexport default function createCommandHandlers(store, reactotron) {\n  let storeSub;\n  const restoreState = store.action((_, state) => state);\n\n  return {\n    // \"state.keys.request\": res => {\n    //   console.log(res);\n    //   const state = store.getState();\n    // },\n\n    \"state.values.subscribe\": ({ payload }) => {\n      // handle initial paths from the client\n      if (payload.paths) {\n        const changes = getChanges(payload.paths, store.getState());\n        reactotron.stateValuesChange(changes);\n      }\n\n      function handler(state, action) {\n        const name = (action && action.name) || \"Reactotron/DISPATCH\";\n        const changes = getChanges(payload.paths, state);\n\n        reactotron.stateActionComplete(name, state);\n        reactotron.stateValuesChange(changes);\n      }\n\n      // subscribe to handle changes to our subscribed paths\n      if (!storeSub) store.subscribe(handler);\n    },\n\n    \"state.action.dispatch\": ({ payload }) => {\n      store.setState(payload.action);\n    },\n\n    \"state.backup.request\": () => {\n      const state = store.getState();\n      reactotron.stateBackupResponse(state);\n    },\n\n    \"state.restore.request\": ({ payload }) => {\n      restoreState(payload.state);\n    }\n  };\n}\n"],"names":["getChanges","paths","state","changes","index","total","length","path","actualPath","endsWith","replace","value","dlv","push","root","factory","deepDiff","validKinds","inherits","ctor","superCtor","super_","prototype","Object","create","constructor","enumerable","writable","configurable","Diff","kind","defineProperty","this","DiffEdit","origin","call","DiffNew","DiffDeleted","DiffArray","item","arrayRemove","arr","from","to","rest","slice","apply","realTypeOf","subject","type","Math","Array","isArray","toString","test","hashThisString","string","hash","i","charCodeAt","getOrderIndependentHash","object","accum","forEach","key","hasOwnProperty","keyValueString","lhs","rhs","prefilter","stack","orderIndependent","currentPath","normalize","alt","j","k","other","ltype","rtype","ldefined","getOwnPropertyDescriptor","rdefined","sort","a","b","undefined","akeys","keys","pkeys","indexOf","isNaN","observableDiff","observer","accumulateDiff","difference","applyChange","target","source","change","it","last","applyArrayChange","u","defineProperties","diff","orderIndependentDiff","orderIndependentObservableDiff","orderIndepHash","applyDiff","filter","revertChange","revertArrayChange","isConflict","$conflict","DeepDiff","module","store","reactotron","handlers","restoreState","action","_","state.values.subscribe","payload","getState","stateValuesChange","subscribe","name","stateActionComplete","state.action.dispatch","setState","state.backup.request","stateBackupResponse","state.restore.request","createCommandHandlers","onCommand","res","handler"],"mappings":"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"}