import t from"dlv";function e(e=[],n={},a=[]){if(0===e.length)return a;for(let s=0,o=e.length;s<o;s++){const o=e[s],r=o.endsWith(".*")?o.replace(".*",""):o,c=["","*",".*","root","root.*"].indexOf(o)>-1?n:t(n,r);c&&a.push({path:o,value:c})}return a}export default t=>n=>{const a=function(t,n){let a=[];const s=t.action((t,e)=>e);return{"state.values.subscribe":({payload:s})=>{if(a=s.paths,s.paths){const s=e(a,t.getState());n.stateValuesChange(s)}t.subscribe((t,s)=>{const o=s&&s.name||"Reactotron/DISPATCH",r=e(a,t);(function(t,e){try{return e?Promise.resolve(e()).then(function(e){const n=Object.keys(e);let a={};for(let e=0;e<n.length;e++){const s=n[e];a[s]=t[s]}return a}):Promise.resolve(!1)}catch(t){return Promise.reject(t)}})(t,s).then(t=>{t?n.stateActionComplete(o,t):n.display({name:"UNISTORE",preview:"store.setState",value:"Warning: The values of the action cannot be determined when store.setState is used to update state within an action. Think about returning an object instead.",important:!0}),n.stateValuesChange(r)})})},"state.action.dispatch":({payload:e})=>{t.setState(e.action)},"state.backup.request":()=>{const e=t.getState();n.stateBackupResponse(e)},"state.restore.request":({payload:t})=>{s(t.state)}}}(t,n);return{onCommand:t=>{const e=a[t.type];e&&e(t)}}};
//# sourceMappingURL=index.modern.mjs.map
